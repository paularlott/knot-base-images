#!/bin/sh
set -e

# Make KNOT_USER available in called scripts
export KNOT_USER=valkey

# Write the variables to /etc/environment if they are defined
if [ "${KNOT_USER:-}" ]; then
  echo "KNOT_USER=$KNOT_USER" >> /etc/environment
fi
if [ "${KNOT_WILDCARD_DOMAIN:-}" ]; then
  echo "KNOT_WILDCARD_DOMAIN=$KNOT_WILDCARD_DOMAIN" >> /etc/environment
fi
if [ "${KNOT_SPACEID:-}" ]; then
  echo "KNOT_SPACEID=$KNOT_SPACEID" >> /etc/environment
fi

# If the folder /etc/knot-startup.d/ exists then run all scripts in it
if [ -d /etc/knot-startup.d/ ]; then
  for f in /etc/knot-startup.d/*; do
    echo "Running startup script $f"
    bash $f
  done
fi

# If the folder /home/${KNOT_USER}/.knot-startup.d/ exists then run all scripts in it
if [ -d /home/${KNOT_USER}/.knot-startup.d/ ]; then
  for f in /home/${KNOT_USER}/.knot-startup.d/*; do
    echo "Running startup script $f"
    gosu ${KNOT_USER} bash $f
  done
fi

# If KNOT_SERVER is defined
if [ "${KNOT_SERVER:-}" ]; then

	# Get the host architecture, arm64 or amd64
	ARCH=$(uname -m)
  case "$ARCH" in
		'x86_64') url="knot_linux_amd64";;
		'aarch64') url="knot_linux_arm64";;
		*) echo >&2 "error: unsupported architecture: '$ARCH'"; exit 1 ;;
	esac

  echo "Fetching agent binary for $ARCH"

	# Download the application from the server
  curl -sLk ${KNOT_SERVER}/download/$url.zip | funzip > /usr/local/bin/knot
	chmod +x /usr/local/bin/knot

  # If KNOT_DNS_LISTEN is defined update /etc/resolv.conf to use agent for DNS forwarding
  if [ "${KNOT_DNS_LISTEN:-}" ]; then
    echo "Updating /etc/resolv.conf to use agent for DNS forwarding"

    # Get the search line from /etc/resolv.conf if present
    SEARCH=$(grep -i '^search' /etc/resolv.conf | awk '{print $2}')

    # Create new /etc/resolv.conf
    echo "nameserver 127.0.0.1" > /etc/resolv.conf

    # Add search line if present
    if [ "${SEARCH}" ]; then
      echo "search ${SEARCH}" >> /etc/resolv.conf
    fi

    # Allow the agent to bind to low ports
    setcap CAP_NET_BIND_SERVICE=+eip /usr/local/bin/knot
  fi

  echo "Running knot agent..."
  gosu ${KNOT_USER} /usr/local/bin/knot agent &
fi

# Run the old entrypoint
exec /usr/local/bin/docker-entrypoint.sh "$@"
